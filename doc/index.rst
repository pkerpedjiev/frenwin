.. Frenwin documentation master file, created by
   sphinx-quickstart on Mon Feb 24 11:12:09 2014.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

FRET Simulation using Subotimal Secondary Structures
====================================================

Frenwin is a pipeline for simulating FRET experiments using RNAsubopt_ and the coarse-grain RNA modelling framework 'ernwin'. The user must provide an input file generated by RNAsubopt, with the sequence placed in the top line as in the example below.


.. _RNAsubopt: http://www.tbi.univie.ac.at/~ronny/RNA/RNAsubopt.html

Prerequisites
-------------

Python Packages
~~~~~~~~~~~~~~~

* `numpy`
* `scipy`
* `biopython`

forgi
.....

forgi is required by the 3D model creation software `ernwin`. It needs to be downloaded and installed::

    git clone https://github.com/pkerpedjiev/forgi.git
    cd forgi
    git checkout nocytvec
    python setup.py install


ernwin
......

ernwin is a program for modelling a coarse grain representation of 3D RNA structure. When cloning
the repository, replace `pkerp` with your tbi username::

    git clone pkerp@pendari.tbi.univie.ac.at:~/repos/ernwin.git
    cd ernwin
    git checkout full-assed-merge
    python setup.py install

frenwin
.......

frenwin is the framework for using ernwin and a list of suboptimal structures to simulate FRET experiments. 
When cloning the repository, replace `pkerp` with your tbi username::

    git clone pkerp@pendari.tbi.univie.ac.at:~/repos/frenwin.git
    cd frenwin

Sample Input File
-----------------

::

    GAACUAAGUGAUCUAGAAAGGUAUGUCUAAAGUUAUGGCCACGUUUCAAAUGCGUGCUUUUUUUUUAAAACUUAUG
    1   ....(((((.....(((((((((((......(..(((....)))..).....)))))))))))......)))))..    461
    2   ....(((((.....((((((((((((.....(..(((....)))..)....))))))))))))......)))))..    12619
    3   ....(((((.....((((((((((((........(((....))).......))))))))))))......)))))..    7781
    4   .....((((.....((((((((((((........(((....))).......))))))))))))......))))...    1077


This file will be converted into a set of fasta files which will subsequently be passed on to `ernwin` for 3D model generation. The output fasta files will be placed in a sub-directory called `orig_seq_fastas`. The name of each file will be a number equal to the line number of the secondary structure - 1 (because the sequence itself is always the first line).::

    frenwin.py experiments/21.02.14/orig_seq.subopt    

One can indicate that only the first *n* secondary structures should be used by using the `-n` option::

   frenwin.py experiments/21.02.14/orig_seq.subopt -n 10

To verify that the fasta files have been generated, check the number of files in the output directory::

    [pkerp@pendari jing_sequences]$ find experiments/21.02.14/fastas_orig_seq/ -name "*.fa" | wc -l
    17

Check the first fasta sequence to make sure it is properly generated with an id line, a sequence line and a secondary structure line::

    [pkerp@pendari jing_sequences]$ cat experiments/21.02.14/fastas_orig_seq/1.fa 
    >1
    GAACUAAGUGAUCUAGAAAGGUAUGUCUAAAGUUAUGGCCACGUUUCAAAUGCGUGCUUUUUUUUUAAAACUUAUG
    ....(((((.....((((((((((((.....(..(((....)))..)....))))))))))))......)))))..

If everything is in order, these files can be used as input to ernwin to calculate 3D distances between the nucleotides which contain the flourophores. The numbers of the nucleotides with contain the flourophores are passed as the options `--dist1` and `--dist2`. In the example below, they are 14 and 76::

    find experiments/21.02.14/fastas_orig_seq -name "*.fa" | xargs -I {} gibbs.py --cylinder-loop-rog -m -i 100 --output-dir jing/ --single-sampler --dist1 14 --dist2 76 --log-to-file {}

The imporant options in the command above are:

* `-i` The number of sampling steps in the 3D structure generation procedure
* `--output-dir` The directory in which the output will be stored. This directory will contain the models for the best 3 structures as well as a log of the output for the program. This log file will contain the distances between the specified nucleotides as the last column. If no two nucleotides are specified, no distances will be printed.


The results can be condensed into a single file using an awk command::

    find jing/ -name "log.txt" | xargs cat | awk '{print ( $NF ) }' | histogram.py


