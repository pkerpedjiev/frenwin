.. Frenwin documentation master file, created by
   sphinx-quickstart on Mon Feb 24 11:12:09 2014.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

FRET Simulation using Subotimal Secondary Structures
====================================================

Frenwin is a pipeline for simulating FRET experiments using RNAsubopt_ and the
coarse-grain RNA modelling framework 'ernwin'. The user must provide an input
file generated by RNAsubopt, with the sequence placed in the top line as in the
example below.


.. _RNAsubopt: http://www.tbi.univie.ac.at/~ronny/RNA/RNAsubopt.html

Prerequisites
-------------

Python Packages
~~~~~~~~~~~~~~~

* `numpy`
* `scipy`
* `biopython`
* `pandas`

forgi
.....

forgi is required by the 3D model creation software `ernwin`. It needs to be
downloaded and installed::

    git clone https://github.com/pkerpedjiev/forgi.git
    cd forgi
    python setup.py install


ernwin
......

ernwin is a program for modelling a coarse grain representation of 3D RNA
structure. When cloning the repository, replace `pkerp` with your tbi
username::

    git clone pkerp@pendari.tbi.univie.ac.at:~/repos/ernwin.git
    cd ernwin
    python setup.py install

frenwin
.......

frenwin is the framework for using ernwin and a list of suboptimal structures
to simulate FRET experiments.  When cloning the repository, replace `pkerp`
with your tbi username::

    git clone pkerp@pendari.tbi.univie.ac.at:~/repos/frenwin.git
    cd frenwin

Sample Input File
-----------------

::

    GAACUAAGUGAUCUAGAAAGGUAUGUCUAAAGUUAUGGCCACGUUUCAAAUGCGUGCUUUUUUUUUAAAACUUAUGCUCUUAUUUACUAACAAAAUCAACAUGCUAUUGAACUAGAGAUCCACCUACUUCAUGUU
    2       ....(((((.....((((((((((((.....(..(((....)))..)....))))))))))))......)))))............................((...((((.(((........))).)))).)). -17.2   NORM_CF NA      NA
    3       ((.((((((.....((((((((((((.....(..(((....)))..)....))))))))))))......))))).).))............................((((.(((........))).)))).... -16.8   NORM_CF NA      NA
    5       ....(((((.....((((((((((((.....(..(((....)))..)....))))))))))))......))))).................................((((.(((........))).)))).... -16.7   NORM_CF NA      NA



This file will be converted into a set of fasta files which will subsequently
be passed on to `ernwin` for 3D model generation. The output fasta files will
be placed in a sub-directory called `fastas_temp`. The name of each file will
be a number equal to the id of the secondary structure. The other two arguments
to `frenwin.py` indicate the nucleotides between which we wish to simulate the
distances.::

    EXPERIMENT_DIR=experiments/21.02.14
    frenwin.py ${EXPERIMENT_DIR}/orig_seq.subopt

One can indicate that only the first *n* secondary structures should be used by
using the `-n` option::

   frenwin.py ${EXPERIMENT_DIR}/orig_seq.subopt -n 10

Run ernwin (this will produce 10000 samples, as controlled by the -i option).::

    find ${EXPERIMENT_DIR}/fastas/ -name *.fa | xargs -n 1 qsub -V -cwd -o cluster_output -e cluster_error -l h_vmem=8G -b y -q c_main.q ernwin_go.py --dists 14,96:14,119 --output-dir ${EXPERIMENT_DIR}/ernwin-output/ --log-to-file -i 10000

Run locally (not on the cluster)::

    find ${EXPERIMENT_DIR}/fastas/ -name *.fa | xargs -n 1 ernwin_go.py --dists:14,96:14,119 --output-dir ${EXPERIMENT_DIR}/ernwin-output/ --log-to-file -i 10000

Finally, we need to collect the results::

    find ${EXPERIMENT_DIR}/ernwin-output/ -name "log.txt" | xargs cat  | python scripts/grep_dists2.py - > ${EXPERIMENT_DIR}/ernwin_distances.csv

The final list of distances can then be found in ${EXPERIMENT_DIR}/all_distances.csv

Rosetta Runs
------------

Prepare the list of secondary structures for 3D modelling using Rosetta::

    find ${EXPERIMENT_DIR}/fastas/ -name "*.fa" -print | xargs -n 1 python scripts/prepare_from_ss_no_assembly.py -b ${EXPERIMENT_DIR}/rosetta_tests/ -n 1000

Run the Rosetta modelling::

     find ${EXPERIMENT_DIR}/rosetta_tests -name "run.sh" | xargs -n 1 qsub -V -cwd -o cluster_output -e cluster_error -l h_vmem=8G -b y -q c_main.q 

Extract the distances from the generated structures::

    rm ${EXPERIMENT_DIR}/rosetta_output.csv; for file in $(ls ${EXPERIMENT_DIR}/rosetta_tests/*/pdbs/*.pdb); do echo $file; python scripts/get_rosetta_distances.py -d 13,36 $file >> ${EXPERIMENT_DIR}/rosetta_output.csv; done;

